<div class="container container-800">
  <div class="card" style="border-radius: 16px; box-shadow: 0 4px 24px rgba(0,0,0,0.1);">
    <div class="card-body-lg">
      <div class="center mb-2r">
        <h1 class="page-title" style="font-size: 2.5rem;">{{product.title}}</h1>
        <div class="panel-soft mb-2r">
          <p class="text-muted" style="font-size: 1.1rem; line-height: 1.6; margin: 0;">{{product.description}}</p>
        </div>
      </div>
      
  <div class="grid-two-equal">
        <div>
          <h3 class="card-title">Informaci√≥n del Producto</h3>
          <div class="info-list">
            <div class="info-row">
              <span class="text-muted">Precio:</span>
              <span class="price" style="font-size: 1.2rem;">${{product.price}}</span>
            </div>
            <div class="info-row">
              <span class="text-muted">Stock:</span>
              <span class="{{#if (gt product.stock 0)}}text-success{{else}}text-danger{{/if}}" style="font-weight: bold;">
                {{#if (gt product.stock 0)}}{{product.stock}} unidades{{else}}Sin stock{{/if}}
              </span>
            </div>
            <div class="info-row">
              <span class="text-muted">Categor√≠a:</span>
              <span class="badge badge-gray badge-pill" style="font-size: 0.9rem;">
                {{product.category}}
              </span>
            </div>
            <div class="info-row no-border">
              <span class="text-muted">Estado:</span>
              <span class="{{#if (gt product.stock 0)}}text-success{{else}}text-danger{{/if}}">
                {{#if (gt product.stock 0)}}Disponible{{else}}No disponible{{/if}}
              </span>
            </div>
          </div>
        </div>
        
        <div>
          <h3 class="card-title">Agregar al Carrito</h3>
          <div class="panel-soft-lg">
            <div class="mb-1r">
              <label class="text-muted" style="display:block; margin-bottom:.5rem;">Cantidad:</label>
              <input type="number" id="quantity" value="1" min="1" max="{{product.stock}}" class="form-control">
            </div>
            {{#if product.status}}
              {{#if (gt product.stock 0)}}
              <button onclick="addToCart('{{toString product._id}}')" class="btn btn-success w-100" style="padding:12px; font-size:1.1rem;">
                üõí Agregar al Carrito
              </button>
              {{else}}
              <button disabled class="btn btn-gray w-100" style="padding:12px; font-size:1.1rem;">
                Sin stock
              </button>
              {{/if}}
            {{else}}
            <button disabled class="btn btn-gray w-100" style="padding:12px; font-size:1.1rem;">
              No disponible
            </button>
            {{/if}}
          </div>
        </div>
      </div>
      
      <div class="center mt-2r">
        <a href="/products" class="btn-primary" style="text-decoration: none; padding: 12px 24px; border-radius: 6px; display: inline-block;">
          ‚Üê Volver al Cat√°logo
        </a>
      </div>
    </div>
  </div>
</div>

<script>
async function addToCart(productId) {
  const quantity = parseInt(document.getElementById('quantity').value);
  
  if (window.addToCartSession) {
    try {
      const cartId = localStorage.getItem('sessionCartId') || await window.getOrCreateSessionCart();
      const response = await fetch(`/api/carts/${cartId}/product/${productId}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ quantity })
      });
      
      if (response.ok) {
        alert(`${quantity} producto(s) agregado(s) al carrito`);
        if (window.updateCartCount) window.updateCartCount();
      } else {
        alert('Error al agregar producto');
      }
    } catch (error) {
      alert('Error al agregar producto');
    }
  } else {
    fetch('/api/carts', { method: 'POST' })
      .then(response => response.json())
      .then(cart => {
        return fetch(`/api/carts/${cart._id}/product/${productId}`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ quantity })
        });
      })
      .then(response => response.json())
      .then(() => {
        alert(`${quantity} producto(s) agregado(s) al carrito`);
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Error al agregar producto');
      });
  }
}
</script>
